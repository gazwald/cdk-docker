# vim syntax: bash

IMAGE_NAME="cdk-docker"
IMAGE_VERSION="latest"
DOCKER_BUILDKIT=1

# Set this to either "socket" or "address"
# Depending on how you want the container to interact
# with the host docker daemon.
DOCKER_ADDRESS_OR_SOCKET="socket"
if [ "$DOCKER_ADDRESS_OR_SOCKET" = "socket" ]; then
  HOST_SOCKET="/var/run/docker.sock"
  DOCKER_OPTs="-v ${HOST_SOCKET}:${HOST_SOCKET}"
elif [ "$DOCKER_ADDRESS_OR_SOCKET" = "address" ]; then
  HOST_IP=$(hostname -i)
  HOST_PORT="2375"
  DOCKER_OPTS="-e DOCKER_HOST=tcp://${HOST_IP}:${HOST_PORT}"
else
  DOCKER_OPTS=""
fi

UPGRADE_CMD="""
pip-compile --upgrade requirements.cdk.in
"""

# Gather AWS credentials if not set in the environment
# This will grab the _first_ set of credentials it finds in ~/.aws/credentials
if [ -e ~/.aws/credentials ]; then
  if [ -z ${AWS_ACCESS_KEY_ID+x} ]; then
    ACCESS_KEY=$(awk '/aws_access_key_id/ {print $3; exit}' ~/.aws/credentials)
  fi

  if [ -z ${AWS_SECRET_ACCESS_KEY+x} ]; then
    SECRET_KEY=$(awk '/aws_secret_access_key/ {print $3; exit}' ~/.aws/credentials)
  fi
fi

# Set the default region
if [ -e ~/.aws/config ]; then
  if [ -z ${AWS_DEFAULT_REGION+x} ]; then
    REGION=$(awk '/region/ {print $3; exit}' ~/.aws/config)
  fi
else
  REGION="ap-southeast-2"
fi

# Gather GIT configuration if not set in the environment
if [ -e ~/.gitconfig ]; then
  if [ -z ${GIT_AUTHOR_NAME+x} ]; then
    GIT_NAME=$(awk -F'=' '/name/ {sub(/ /, "", $2); print $2; exit}' ~/.gitconfig)
  fi
  if [ -z ${GIT_AUTHOR_EMAIL+x} ]; then
    GIT_EMAIL=$(awk '/email/ {print $3; exit}' ~/.gitconfig)
  fi
fi
